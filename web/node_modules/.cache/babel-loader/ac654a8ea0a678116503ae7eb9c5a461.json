{"ast":null,"code":"var _jsxFileName = \"C:\\\\E-Coleta\\\\web\\\\src\\\\pages\\\\CreatePoint\\\\index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport './styles.css';\nimport logo from \"../../assets/logo.svg\";\nimport { Link, useHistory } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport api from '../../services/api';\nimport axios from 'axios';\n\nconst CreatePoint = () => {\n  const [items, setItems] = useState([]);\n  const [ufs, setUf] = useState([]);\n  const [selectedUf, setSelectedUf] = useState('0');\n  const [actualCityList, setactualCityList] = useState([]);\n  const [selectedCity, setSelectedCity] = useState('0');\n  const [positionSelectedFromClick, setPositionSelectedFromClick] = useState([0, 0]);\n  const [initialPosition, setInitialPosition] = useState([0, 0]);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [formData, setFormDate] = useState({\n    name: '',\n    email: '',\n    whatsapp: '',\n    rua: '',\n    numero: Number\n  });\n\n  function hendleSelectUf(event) {\n    const selectedUf = event.target.value;\n    setSelectedUf(selectedUf);\n  }\n\n  function hendleSelectCity(event) {\n    const selectCity = event.target.value;\n    setSelectedCity(selectCity);\n    console.log(selectCity);\n  }\n\n  function handleMapClick(event) {\n    setPositionSelectedFromClick([event.latlng.lat, event.latlng.lng]);\n    setInitialPosition([event.latlng.lat, event.latlng.lng]);\n  }\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormDate({ ...formData,\n      [name]: value\n    });\n  }\n\n  function handloSelectedItem(id) {\n    const alreadySelected = selectedItems.findIndex(item => item === id);\n\n    if (alreadySelected >= 0) {\n      const filteredItems = selectedItems.filter(item => item !== id);\n      setSelectedItems(filteredItems);\n    } else {\n      setSelectedItems([...selectedItems, id]);\n    }\n\n    console.log(selectedItems);\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const {\n      name,\n      email,\n      whatsapp,\n      rua,\n      numero\n    } = formData;\n    const uf = selectedUf;\n    const city = selectedCity;\n    const [latitude, longitude] = positionSelectedFromClick;\n    const items = selectedItems;\n    const data = {\n      name,\n      email,\n      whatsapp,\n      latitude,\n      logitude: latitude,\n      city,\n      street: rua,\n      uf,\n      items\n    };\n    await api.post('points', data);\n    alert('Ponto de Coleta Adicionado');\n  }\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setInitialPosition([latitude, longitude]);\n    });\n  }, []);\n  useEffect(() => {\n    api.get('/items').then(response => {\n      setItems(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\n      const ufInitials = response.data.map(uf => uf.sigla);\n      setUf(ufInitials);\n    });\n  }, []);\n  useEffect(() => {\n    if (selectedUf === '0') {\n      return;\n    }\n\n    axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/distritos`).then(response => {\n      const cityList = response.data.map(city => city.municipio.nome);\n      setactualCityList(cityList);\n    });\n  }, [selectedUf]);\n  const historo = useHistory();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-create-point\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"E-coleta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FiArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }), \"In\\xEDcio\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, \"Cadastro do\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 32\n    }\n  }), \"Ponto de Coleta\"), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }\n  }, \"Dados\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 25\n    }\n  }, \"Nome da entidade\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    name: \"name\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 29\n    }\n  }, \"E-mail\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 29\n    }\n  }, \"Whatsapp\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"whatsapp\",\n    name: \"whatsapp\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  }, \"Endere\\xE7o\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }\n  }, \"selecione um endere\\xE7o no mapa \")), /*#__PURE__*/React.createElement(Map, {\n    center: initialPosition,\n    zoom: 15,\n    onClick: handleMapClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    position: initialPosition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"uf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 29\n    }\n  }, \"Estado\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"uf\",\n    id: \"uf\",\n    value: selectedUf,\n    onChange: hendleSelectUf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 33\n    }\n  }, \"Selecione um estado\"), ufs.map(uf => /*#__PURE__*/React.createElement(\"option\", {\n    key: String(uf),\n    value: String(uf),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 45\n    }\n  }, uf)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 29\n    }\n  }, \"Cidade\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"city\",\n    id: \"city\",\n    value: selectedCity,\n    onChange: hendleSelectCity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 33\n    }\n  }, \"Selecione uma cidade\"), actualCityList.map(city => /*#__PURE__*/React.createElement(\"option\", {\n    key: String(city),\n    value: String(city),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 45\n    }\n  }, String(city)))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"street\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 29\n    }\n  }, \"Rua\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"street\",\n    id: \"street\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 29\n    }\n  }, \"Numero\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"number\",\n    id: \"number\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 25\n    }\n  }, \"\\xCDtens de coleta\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 25\n    }\n  }, \"selecione os itens de coleta a baixo\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"items-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 21\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.id,\n    onClick: () => handloSelectedItem(item.id),\n    className: selectedItems.includes(item.id) ? 'selected' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.url,\n    alt: \"teste\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 33\n    }\n  }, item.title))))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 17\n    }\n  }, \"Cadastrar ponto de coleta\")));\n};\n\nexport default CreatePoint;","map":{"version":3,"sources":["C:/E-Coleta/web/src/pages/CreatePoint/index.tsx"],"names":["React","useEffect","useState","Link","useHistory","FiArrowLeft","Map","TileLayer","Marker","api","axios","CreatePoint","items","setItems","ufs","setUf","selectedUf","setSelectedUf","actualCityList","setactualCityList","selectedCity","setSelectedCity","positionSelectedFromClick","setPositionSelectedFromClick","initialPosition","setInitialPosition","selectedItems","setSelectedItems","formData","setFormDate","name","email","whatsapp","rua","numero","Number","hendleSelectUf","event","target","value","hendleSelectCity","selectCity","console","log","handleMapClick","latlng","lat","lng","handleInputChange","handloSelectedItem","id","alreadySelected","findIndex","item","filteredItems","filter","handleSubmit","preventDefault","uf","city","latitude","longitude","data","logitude","street","post","alert","navigator","geolocation","getCurrentPosition","position","coords","get","then","response","ufInitials","map","sigla","cityList","municipio","nome","historo","logo","String","includes","url","title"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, ChangeEvent, FormEvent } from 'react'\r\nimport './styles.css'\r\nimport logo from '../../assets/logo.svg'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { FiArrowLeft } from 'react-icons/fi'\r\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet'\r\nimport api from '../../services/api'\r\nimport axios from 'axios'\r\nimport { LeafletMouseEvent } from 'leaflet'\r\n\r\ninterface Items {\r\n    id: number\r\n    title: string\r\n    url: string\r\n}\r\n\r\ninterface ufResponse {\r\n    sigla: string\r\n}\r\n\r\ninterface ufCitys {\r\n    municipio: { nome: string }\r\n}\r\n\r\nconst CreatePoint = () => {\r\n\r\n    const [items, setItems] = useState<Items[]>([])\r\n    const [ufs, setUf] = useState<String[]>([])\r\n    const [selectedUf, setSelectedUf] = useState('0')\r\n    const [actualCityList, setactualCityList] = useState<String[]>([])\r\n    const [selectedCity, setSelectedCity] = useState('0')\r\n    const [positionSelectedFromClick, setPositionSelectedFromClick] = useState<[number, number]>([0, 0])\r\n    const [initialPosition, setInitialPosition] = useState<[number, number]>([0, 0])\r\n    const [selectedItems, setSelectedItems] = useState<number[]>([])\r\n    const [formData, setFormDate] = useState({\r\n        name: '',\r\n        email: '',\r\n        whatsapp: '',\r\n        rua: '',\r\n        numero: Number\r\n    })\r\n\r\n\r\n    function hendleSelectUf(event: ChangeEvent<HTMLSelectElement>) {\r\n        const selectedUf = event.target.value\r\n        setSelectedUf(selectedUf)\r\n    }\r\n\r\n    function hendleSelectCity(event: ChangeEvent<HTMLSelectElement>) {\r\n        const selectCity = event.target.value\r\n        setSelectedCity(selectCity)\r\n        console.log(selectCity)\r\n    }\r\n\r\n    function handleMapClick(event: LeafletMouseEvent) {\r\n        setPositionSelectedFromClick(\r\n            [event.latlng.lat, event.latlng.lng]\r\n        )\r\n        setInitialPosition([event.latlng.lat, event.latlng.lng])\r\n    }\r\n\r\n    function handleInputChange(event: ChangeEvent<HTMLInputElement>) {\r\n        const { name, value } = event.target\r\n\r\n        setFormDate({ ...formData, [name]: value })\r\n\r\n    }\r\n\r\n    function handloSelectedItem(id: number) {\r\n        const alreadySelected = selectedItems.findIndex(item => item === id)\r\n        if (alreadySelected >= 0) {\r\n            const filteredItems = selectedItems.filter(item => item !== id)\r\n            setSelectedItems(filteredItems)\r\n        } else {\r\n            setSelectedItems([...selectedItems, id])\r\n        }\r\n\r\n        console.log(selectedItems)\r\n    }\r\n\r\n    async function handleSubmit(event: FormEvent) {\r\n        event.preventDefault()\r\n        const { name, email, whatsapp, rua, numero } = formData\r\n        const uf = selectedUf\r\n        const city = selectedCity\r\n        const [latitude, longitude] = positionSelectedFromClick\r\n        const items = selectedItems\r\n\r\n        const data = {\r\n            name,\r\n            email,\r\n            whatsapp,\r\n            latitude,\r\n            logitude: latitude,\r\n            city,\r\n            street: rua,\r\n            uf,\r\n            items\r\n        }\r\n\r\n        await api.post('points', data)\r\n        alert('Ponto de Coleta Adicionado')\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n            const { latitude, longitude } = position.coords\r\n\r\n            setInitialPosition([latitude, longitude])\r\n\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        api.get('/items').then(response => {\r\n            setItems(response.data)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        axios.get<ufResponse[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\r\n            const ufInitials = response.data.map(uf => uf.sigla)\r\n            setUf(ufInitials)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        if (selectedUf === '0') {\r\n            return\r\n        }\r\n\r\n        axios.get<ufCitys[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/distritos`).then(response => {\r\n\r\n\r\n            const cityList = response.data.map(city => city.municipio.nome)\r\n\r\n            setactualCityList(cityList)\r\n\r\n        })\r\n\r\n\r\n\r\n    }, [selectedUf])\r\n\r\n\r\n\r\nconst historo = useHistory();\r\n\r\n\r\n    return (\r\n        <div id=\"page-create-point\">\r\n            <header>\r\n                <img src={logo} alt=\"E-coleta\" />\r\n                <Link to=\"/\">\r\n                    <FiArrowLeft />\r\n                    Início\r\n                </Link>\r\n            </header>\r\n            <form onSubmit={handleSubmit}>\r\n                <h1>Cadastro do<br />Ponto de Coleta</h1>\r\n\r\n                <fieldset>\r\n                    <legend>\r\n                        <h2>Dados</h2>\r\n                    </legend>\r\n                    <div className=\"field\">\r\n                        <label htmlFor=\"name\">Nome da entidade</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"name\"\r\n                            name=\"name\"\r\n                            onChange={handleInputChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"field-group\">\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"name\">E-mail</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email\"\r\n                                name=\"email\"\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"name\">Whatsapp</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"whatsapp\"\r\n                                name=\"whatsapp\"\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n\r\n                <fieldset>\r\n                    <legend>\r\n                        <h2>Endereço</h2>\r\n                        <span>selecione um endereço no mapa </span>\r\n                    </legend>\r\n                    <Map center={initialPosition} zoom={15} onClick={handleMapClick}>\r\n                        <TileLayer\r\n                            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        />\r\n                        <Marker position={initialPosition} />\r\n                    </Map>\r\n                    <div className=\"field-group\">\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"uf\">Estado</label>\r\n                            <select\r\n                                name=\"uf\"\r\n                                id=\"uf\"\r\n                                value={selectedUf}\r\n                                onChange={hendleSelectUf}\r\n                            >\r\n\r\n                                <option value=\"0\">Selecione um estado</option>\r\n\r\n                                {\r\n                                    ufs.map(\r\n                                        uf => (\r\n                                            <option key={String(uf)} value={String(uf)}>{uf}</option>\r\n                                        )\r\n                                    )\r\n                                }\r\n\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"city\">Cidade</label>\r\n                            <select\r\n                                name=\"city\"\r\n                                id=\"city\"\r\n                                value={selectedCity}\r\n                                onChange={hendleSelectCity}\r\n                            >\r\n                                <option value=\"0\">Selecione uma cidade</option>\r\n                                {\r\n                                    actualCityList.map(\r\n                                        city => (\r\n                                            <option key={String(city)} value={String(city)}>{String(city)}</option>\r\n                                        )\r\n                                    )\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"field-group\">\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"street\">Rua</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"street\"\r\n                                id=\"street\"\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"number\">Numero</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                name=\"number\"\r\n                                id=\"number\"\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n\r\n                <fieldset>\r\n                    <legend>\r\n                        <h2>Ítens de coleta</h2>\r\n                        <span>selecione os itens de coleta a baixo</span>\r\n                    </legend>\r\n                    <ul className=\"items-grid\">\r\n                        {items.map(item => (\r\n                            <li key={item.id}\r\n                                onClick={() => handloSelectedItem(item.id)}\r\n                                className={selectedItems.includes(item.id) ? 'selected' : ''}\r\n                            >\r\n                                <img src={item.url} alt=\"teste\" />\r\n                                <strong>{item.title}</strong>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </fieldset>\r\n                <button type=\"submit\">Cadastrar ponto de coleta</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePoint"]},"metadata":{},"sourceType":"module"}