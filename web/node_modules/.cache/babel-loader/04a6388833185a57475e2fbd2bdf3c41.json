{"ast":null,"code":"var _jsxFileName = \"C:\\\\E-Coleta\\\\web\\\\src\\\\pages\\\\CreatePoint\\\\index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport './styles.css';\nimport logo from \"../../assets/logo.svg\";\nimport { Link } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport api from '../../services/api';\nimport axios from 'axios';\n\nconst CreatePoint = () => {\n  const [items, setItems] = useState([]);\n  const [ufs, setUf] = useState([]);\n  const [selectedUf, setSelectedUf] = useState('0');\n  const [actualCityList, setactualCityList] = useState([]);\n  const [selectedCity, setSelectedCity] = useState('0');\n  const [positionSelectedFromClick, setPositionSelectedFromClick] = useState([0, 0]);\n\n  function hendleSelectUf(event) {\n    const selectedUf = event.target.value;\n    setSelectedUf(selectedUf);\n  }\n\n  function hendleSelectCity(event) {\n    const selectCity = event.target.value;\n    setSelectedCity(selectCity);\n    console.log(selectCity);\n  }\n\n  useEffect(() => {\n    api.get('/items').then(response => {\n      setItems(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\n      const ufInitials = response.data.map(uf => uf.sigla);\n      setUf(ufInitials);\n    });\n  }, []);\n  useEffect(() => {\n    if (selectedUf === '0') {\n      return;\n    }\n\n    axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/distritos`).then(response => {\n      const cityList = response.data.map(city => city.municipio.nome);\n      setactualCityList(cityList);\n    });\n  }, [selectedUf]);\n\n  function handleMapClick(event) {\n    setPositionSelectedFromClick([event.latlng.lat, event.latlng.lng]);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-create-point\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"E-coleta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FiArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }), \"In\\xEDcio\")), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, \"Cadastro do\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 36\n    }\n  }), \"Ponto de Coleta\"), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }, \"Dados\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, \"Nome da entidade\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    name: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 33\n    }\n  }, \"E-mail\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 33\n    }\n  }, \"Whatsapp\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"whatsapp\",\n    name: \"whatsapp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }, \"Endere\\xE7o\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 29\n    }\n  }, \"selecione um endere\\xE7o no mapa\")), /*#__PURE__*/React.createElement(Map, {\n    center: [-18.9345883, -48.3393774],\n    zoom: 15,\n    onClick: handleMapClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    position: positionSelectedFromClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"uf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 33\n    }\n  }, \"Estado\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"uf\",\n    id: \"uf\",\n    value: selectedUf,\n    onChange: hendleSelectUf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 37\n    }\n  }, \"Selecione um estado\"), ufs.map(uf => /*#__PURE__*/React.createElement(\"option\", {\n    key: String(uf),\n    value: String(uf),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 49\n    }\n  }, uf)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 33\n    }\n  }, \"Cidade\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"city\",\n    id: \"city\",\n    value: selectedCity,\n    onChange: hendleSelectCity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 37\n    }\n  }, \"Selecione uma cidade\"), actualCityList.map(city => /*#__PURE__*/React.createElement(\"option\", {\n    key: String(city),\n    value: String(city),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 45\n    }\n  }, String(city)))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"street\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 33\n    }\n  }, \"Rua\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"street\",\n    id: \"street\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 33\n    }\n  }, \"Numero\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"number\",\n    id: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 29\n    }\n  }, \"\\xCDtens de coleta\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 29\n    }\n  }, \"selecione os itens de coleta a baixo\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"items-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 25\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.url,\n    alt: \"teste\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 37\n    }\n  }, item.title))))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }\n  }, \"Cadastrar ponto de coleta\")));\n};\n\nexport default CreatePoint;","map":{"version":3,"sources":["C:/E-Coleta/web/src/pages/CreatePoint/index.tsx"],"names":["React","useEffect","useState","Link","FiArrowLeft","Map","TileLayer","Marker","api","axios","CreatePoint","items","setItems","ufs","setUf","selectedUf","setSelectedUf","actualCityList","setactualCityList","selectedCity","setSelectedCity","positionSelectedFromClick","setPositionSelectedFromClick","hendleSelectUf","event","target","value","hendleSelectCity","selectCity","console","log","get","then","response","data","ufInitials","map","uf","sigla","cityList","city","municipio","nome","handleMapClick","latlng","lat","lng","logo","String","item","id","url","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAAwD,OAAxD;AACA,OAAO,cAAP;;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,MAAzB,QAA8C,eAA9C;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAiBA,MAAMC,WAAW,GAAG,MAAM;AAEtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAU,EAAV,CAAlC;AACA,QAAM,CAACW,GAAD,EAAMC,KAAN,IAAeZ,QAAQ,CAAW,EAAX,CAA7B;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,GAAD,CAA5C;AACA,QAAM,CAACe,cAAD,EAAiBC,iBAAjB,IAAsChB,QAAQ,CAAW,EAAX,CAApD;AACA,QAAM,CAACiB,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAAC,GAAD,CAAhD;AACA,QAAM,CAACmB,yBAAD,EAA4BC,4BAA5B,IAA4DpB,QAAQ,CAAmB,CAAC,CAAD,EAAG,CAAH,CAAnB,CAA1E;;AAGA,WAASqB,cAAT,CAAwBC,KAAxB,EAA+D;AAC3D,UAAMT,UAAU,GAAGS,KAAK,CAACC,MAAN,CAAaC,KAAhC;AACAV,IAAAA,aAAa,CAACD,UAAD,CAAb;AACH;;AAED,WAASY,gBAAT,CAA0BH,KAA1B,EAAiE;AAC7D,UAAMI,UAAU,GAAGJ,KAAK,CAACC,MAAN,CAAaC,KAAhC;AACAN,IAAAA,eAAe,CAACQ,UAAD,CAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACH;;AAED3B,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,GAAG,CAACuB,GAAJ,CAAQ,QAAR,EAAkBC,IAAlB,CAAuBC,QAAQ,IAAI;AAC/BrB,MAAAA,QAAQ,CAACqB,QAAQ,CAACC,IAAV,CAAR;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMAjC,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,KAAK,CAACsB,GAAN,CAAwB,6DAAxB,EAAuFC,IAAvF,CAA4FC,QAAQ,IAAI;AACpG,YAAME,UAAU,GAAGF,QAAQ,CAACC,IAAT,CAAcE,GAAd,CAAkBC,EAAE,IAAIA,EAAE,CAACC,KAA3B,CAAnB;AACAxB,MAAAA,KAAK,CAACqB,UAAD,CAAL;AACH,KAHD;AAIH,GALQ,EAKN,EALM,CAAT;AAOAlC,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAGc,UAAU,KAAK,GAAlB,EAAsB;AAClB;AACH;;AAEDN,IAAAA,KAAK,CAACsB,GAAN,CAAsB,+DAA8DhB,UAAW,YAA/F,EAA4GiB,IAA5G,CAAiHC,QAAQ,IAAI;AAGzH,YAAMM,QAAQ,GAAGN,QAAQ,CAACC,IAAT,CAAcE,GAAd,CAAkBI,IAAI,IAAIA,IAAI,CAACC,SAAL,CAAeC,IAAzC,CAAjB;AAEAxB,MAAAA,iBAAiB,CAACqB,QAAD,CAAjB;AAEH,KAPD;AAWH,GAjBQ,EAiBN,CAACxB,UAAD,CAjBM,CAAT;;AAmBA,WAAS4B,cAAT,CAAwBnB,KAAxB,EAAiD;AAC7CF,IAAAA,4BAA4B,CACxB,CAACE,KAAK,CAACoB,MAAN,CAAaC,GAAd,EAAmBrB,KAAK,CAACoB,MAAN,CAAaE,GAAhC,CADwB,CAA5B;AAGH;;AAGG,sBACI;AAAK,IAAA,EAAE,EAAC,mBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEC,IAAV;AAAgB,IAAA,GAAG,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,cAFJ,CADJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAf,oBADJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CADJ,eAII;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,EAAE,EAAC,MAFP;AAGI,IAAA,IAAI,EAAC,MAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAJJ,eAYI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,EAAE,EAAC,OAFP;AAGI,IAAA,IAAI,EAAC,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eASI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,EAAE,EAAC,UAFP;AAGI,IAAA,IAAI,EAAC,UAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CATJ,CAZJ,CAHJ,eAmCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAFJ,CADJ,eAKI,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE,CAAC,CAAC,UAAF,EAAc,CAAC,UAAf,CAAb;AAAyC,IAAA,IAAI,EAAE,EAA/C;AAAmD,IAAA,OAAO,EAAEJ,cAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,WAAW,EAAC,2EADhB;AAEI,IAAA,GAAG,EAAC,oDAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAKI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEtB,yBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CALJ,eAYI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,IAAA,IAAI,EAAC,IADT;AAEI,IAAA,EAAE,EAAC,IAFP;AAGI,IAAA,KAAK,EAAEN,UAHX;AAII,IAAA,QAAQ,EAAEQ,cAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOI;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAPJ,EAUQV,GAAG,CAACuB,GAAJ,CACIC,EAAE,iBACE;AAAQ,IAAA,GAAG,EAAEW,MAAM,CAACX,EAAD,CAAnB;AAAyB,IAAA,KAAK,EAAEW,MAAM,CAACX,EAAD,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6CA,EAA7C,CAFR,CAVR,CAFJ,CADJ,eAsBI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,EAAE,EAAC,MAFH;AAGA,IAAA,KAAK,EAAElB,YAHP;AAIA,IAAA,QAAQ,EAAEQ,gBAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BANJ,EAQQV,cAAc,CAACmB,GAAf,CACII,IAAI,iBACJ;AAAQ,IAAA,GAAG,EAAEQ,MAAM,CAACR,IAAD,CAAnB;AAA2B,IAAA,KAAK,EAAEQ,MAAM,CAACR,IAAD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiDQ,MAAM,CAACR,IAAD,CAAvD,CAFJ,CARR,CAFJ,CAtBJ,CAZJ,eAqDI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,eAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,QAAxB;AAAiC,IAAA,EAAE,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAKI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,IAAI,EAAC,QAA1B;AAAmC,IAAA,EAAE,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CALJ,CArDJ,CAnCJ,eAoGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFJ,CADJ,eAKI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK7B,KAAK,CAACyB,GAAN,CAAUa,IAAI,iBACX;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAED,IAAI,CAACE,GAAf;AAAoB,IAAA,GAAG,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASF,IAAI,CAACG,KAAd,CAFJ,CADH,CADL,CALJ,CApGJ,eAkHI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAlHJ,CARJ,CADJ;AA+HH,CA3LL;;AA6LA,eAAe1C,WAAf","sourcesContent":["import React, { useEffect, useState, ChangeEvent } from 'react'\r\nimport './styles.css'\r\nimport logo from '../../assets/logo.svg'\r\nimport { Link } from 'react-router-dom'\r\nimport { FiArrowLeft } from 'react-icons/fi'\r\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet'\r\nimport api from '../../services/api'\r\nimport axios from 'axios'\r\nimport {LeafletMouseEvent} from 'leaflet'\r\n\r\ninterface Items {\r\n    id: number\r\n    title: string\r\n    url: string\r\n}\r\n\r\ninterface ufResponse {\r\n    sigla: string\r\n}\r\n\r\ninterface ufCitys {\r\n    municipio: {nome: string}\r\n}\r\n\r\nconst CreatePoint = () => {\r\n\r\n    const [items, setItems] = useState<Items[]>([])\r\n    const [ufs, setUf] = useState<String[]>([])\r\n    const [selectedUf, setSelectedUf] = useState('0')\r\n    const [actualCityList, setactualCityList] = useState<String[]>([])\r\n    const [selectedCity, setSelectedCity] = useState('0')\r\n    const [positionSelectedFromClick, setPositionSelectedFromClick] = useState<[number, number]>([0,0])\r\n\r\n\r\n    function hendleSelectUf(event: ChangeEvent<HTMLSelectElement>) {\r\n        const selectedUf = event.target.value\r\n        setSelectedUf(selectedUf)\r\n    }\r\n\r\n    function hendleSelectCity(event: ChangeEvent<HTMLSelectElement>) {\r\n        const selectCity = event.target.value\r\n        setSelectedCity(selectCity)\r\n        console.log(selectCity)\r\n    }\r\n\r\n    useEffect(() => {\r\n        api.get('/items').then(response => {\r\n            setItems(response.data)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        axios.get<ufResponse[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\r\n            const ufInitials = response.data.map(uf => uf.sigla)\r\n            setUf(ufInitials)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        if(selectedUf === '0'){\r\n            return\r\n        }\r\n\r\n        axios.get<ufCitys[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/distritos`).then(response => {\r\n\r\n\r\n            const cityList = response.data.map(city => city.municipio.nome)\r\n        \r\n            setactualCityList(cityList)\r\n        \r\n        })\r\n\r\n\r\n\r\n    }, [selectedUf])\r\n\r\n    function handleMapClick(event: LeafletMouseEvent){\r\n        setPositionSelectedFromClick(\r\n            [event.latlng.lat, event.latlng.lng]\r\n        )\r\n    }\r\n\r\n\r\n        return (\r\n            <div id=\"page-create-point\">\r\n                <header>\r\n                    <img src={logo} alt=\"E-coleta\" />\r\n                    <Link to=\"/\">\r\n                        <FiArrowLeft />\r\n                    Início\r\n                </Link>\r\n                </header>\r\n                <form>\r\n                    <h1>Cadastro do<br />Ponto de Coleta</h1>\r\n\r\n                    <fieldset>\r\n                        <legend>\r\n                            <h2>Dados</h2>\r\n                        </legend>\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"name\">Nome da entidade</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"name\"\r\n                                name=\"name\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"field-group\">\r\n                            <div className=\"field\">\r\n                                <label htmlFor=\"name\">E-mail</label>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <label htmlFor=\"name\">Whatsapp</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id=\"whatsapp\"\r\n                                    name=\"whatsapp\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </fieldset>\r\n\r\n                    <fieldset>\r\n                        <legend>\r\n                            <h2>Endereço</h2>\r\n                            <span>selecione um endereço no mapa</span>\r\n                        </legend>\r\n                        <Map center={[-18.9345883, -48.3393774]} zoom={15} onClick={handleMapClick}>\r\n                            <TileLayer\r\n                                attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                            />\r\n                            <Marker position={positionSelectedFromClick} />\r\n                        </Map>\r\n                        <div className=\"field-group\">\r\n                            <div className=\"field\">\r\n                                <label htmlFor=\"uf\">Estado</label>\r\n                                <select\r\n                                    name=\"uf\"\r\n                                    id=\"uf\"\r\n                                    value={selectedUf}\r\n                                    onChange={hendleSelectUf}\r\n                                >\r\n\r\n                                    <option value=\"0\">Selecione um estado</option>\r\n\r\n                                    {\r\n                                        ufs.map(\r\n                                            uf => (\r\n                                                <option key={String(uf)} value={String(uf)}>{uf}</option>\r\n                                            )\r\n                                        )\r\n                                    }\r\n\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <label htmlFor=\"city\">Cidade</label>\r\n                                <select \r\n                                name=\"city\" \r\n                                id=\"city\"\r\n                                value={selectedCity}\r\n                                onChange={hendleSelectCity}\r\n                                >\r\n                                    <option value=\"0\">Selecione uma cidade</option>\r\n                                    {\r\n                                        actualCityList.map(\r\n                                            city => (\r\n                                            <option key={String(city)} value={String(city)}>{String(city)}</option>\r\n                                            )\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"field-group\">\r\n                            <div className=\"field\">\r\n                                <label htmlFor=\"street\">Rua</label>\r\n                                <input type=\"text\" name=\"street\" id=\"street\" />\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <label htmlFor=\"number\">Numero</label>\r\n                                <input type=\"number\" name=\"number\" id=\"number\" />\r\n                            </div>\r\n                        </div>\r\n                    </fieldset>\r\n\r\n                    <fieldset>\r\n                        <legend>\r\n                            <h2>Ítens de coleta</h2>\r\n                            <span>selecione os itens de coleta a baixo</span>\r\n                        </legend>\r\n                        <ul className=\"items-grid\">\r\n                            {items.map(item => (\r\n                                <li key={item.id}>\r\n                                    <img src={item.url} alt=\"teste\" />\r\n                                    <strong>{item.title}</strong>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </fieldset>\r\n                    <button type=\"submit\">Cadastrar ponto de coleta</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default CreatePoint"]},"metadata":{},"sourceType":"module"}